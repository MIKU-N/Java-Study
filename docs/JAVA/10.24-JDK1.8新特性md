# JDK1.8新特性

## Lambda表达式

>  Lambda表达式就是一个匿名函数(方法)我们可以把Lambda表达式理解为一段可以传递的代码(将代码像数据一样传递)，可以写出更简洁、更灵活的代码，作为一种更紧凑的代码风格，使Java语言的表达能力得到了提升。

Lambda表达式在Java中引入了一个新的语法元素和操作符，这个操作符为`->`，该操作符被称为Lambda操作符，它将Lambda表达式分为两个部分:

左侧:指定可Lambda表达式中需要的所有参数

右侧：指定了Lambda体，即Lambda表达式要执行的功能

Lambda表达式需要一个函数式接口的支持

函数式接口:接口中只有一个抽象方法的接口称为函数式接口，可以使用注解@FunctionalInterface来修饰，可以检查该接口是否为函数式

Java1.8中内置的四大核心函数式接口

- `Consumer<T>`消费型接口,方法 `void accept(T t);`
- `Supplier<T>` 供给型接口，方法 `T get();`
- `Function<T,R>`	函数型接口，方法 `R apply(T t);`
- `Predicate<T>` 断言型接口, 方法 `boolean test(T t);`

### 方法引用

若是lambda体中的内容已经有现成的方法来实现了，我们就可以使用方法引用；我们可以把方法引用理解为lambda表达式的另外一种体现形式



### 接口中的默认方法与静态方法

